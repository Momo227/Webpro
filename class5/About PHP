1 PHP とは
　PHP は Personal Home Page Tools の略です。しかし、そのこと自体はあまり重要ではありません。PHP は、1995 年 6 月に
初めて登場し、2000 年以降に急速に普及した比較的新しい言語です。2000 年 5 月にバージョン 4 がリリース、2004 年 7 月に
バージョン 5 がリリース、バージョン 6 は諸般の事情で欠番となり、2015 年 12 月にバージョン 7 がリリース、2020 年 11 月
にバージョン 8.0 がリリースされました。現在は 2021 年 3 月 4 日にリリースされたバージョン 8.0.3 が最新となっています。
PHP は JavaScript とは異なり Web サーバー上でのみ実行されます。そのため、サーバーサイドスクリプト言語の一つです。
昔は、CGI と言えば、C 言語や Perl で書くのが一般的でしたが、最近は PHP で記述することが一般的です。

1.1 PHP の書き方
 PHP は HTML の中に書く、というよりは、PHP の中に HTML を書くというのが正しい解釈です。ファイルの拡張子は、通
常は .php とします。PHP として処理したい部分を <?php と ?> で囲みます。逆に囲まれていない部分は、そのまま出力され
ます。
 実際に PHP を書いてみましょう。九九の表の場合は、下記のようになります。JavaScript でも全く同じ内容が表示される
Web ページを作成することも可能です。しかし、大きな違いがあります。それは、Web ブラウザで「ソースの表示」を行って
みれば一目瞭然です。<?php と ?>で囲まれた部分は「ソースの表示」をしても実行結果しか見ることができません。

<<デバッグの方法>>
$ php index.php
 上記のように php コマンドの引数に php ファイルを指定すると、実行結果が画面に出力されます。Web ブラウザ上で思う
ように表示されない場合には文法間違いの可能性が高いので、php コマンドを用いて実行結果を画面に出力してください。


2 PHP の言語仕様
2.1 コメント
//1 行コメント
/*
複数行コメント
*/
# 1 行コメント

2.2 変数と変数の型
　PHP の変数は$で始まる文字列です。PHP にも数値型、文字型、論理型のような型があるのですが、使う変数やその変数の
型を宣言する必要はありません。型は自動的に決まります。
　文字列を扱うには、"(ダブルクォーテーション)で囲む方法と’ (シングルクォーテーション)で囲む方法があります。"で囲んだ
文字列は、中に変数が含まれているとその変数を文字列に変換します。また、エスケープ文字(例えば\n や\")も正しく変換され
ます。一方、’ (シングルクォーテーション)で囲んだ文字列は、変換されません。

2.3 演算子
　PHP では、文字列連結演算子. (ドット) が加わります。

2.4 連想配列
　$a['apple']= 'リンゴ'; $b['リンゴ']='apple'; のように添え字に文字列を入れることができます。
また、$a[-200]=1; $a[10000000000]=2; $a[-3.14]=3; のように添え字に負の値、巨大な数、小数などを入れることもできま
す。
　内部実装でハッシュテーブルが用いられているので連想配列に対して高速にアクセスできます。
CGI で使うフォームからの受け渡しデータが格納される$_POST 配列も連想配列となっています。

2.5 標準出力
2.5.1 echo と print
　PHP では、<?php と ?> で囲まれていない部分はそのまま標準出力されます。<?php と ?> で囲まれたスクリプト内で標準
出力する場合には、echo または print を使います。基本的にはどちらを使っても構いません。echo では戻り値がない分、効
率がいいとされています。
変数やエスケープ文字を展開する場合には、"(ダブルクォーテーション)で囲んでください。また、日本語を出力する場合、’ (シ
ングルクォーテーション)で囲む方が漢字コードを意識しなくて済むので安全です。

2.7.2 ヒアドキュメント ★重要★
 まとまったテキストを標準出力する場合には、ヒアドキュメントという機能を使います。終了マーク文字列には自由な文字列
(ただし先頭は数字以外)を記述することができます。
echo <<< 終了マーク文字列
終了マーク文字列；

最後の行の終了マーク文字列は必ず行の先頭から記述してください。また、終了マーク文字列の 1 つ前は空行にしま
す。空行を入れない場合には、最後に改行がないものとして扱われます。
 ヒアドキュメントの使用例は次のとおりです。
なお、echo の部分は print と記述しても構いません。ヒアドキュメントはとても便利な機能ですので、ぜひ覚えましょう。
echo <<< HTML
ここに書いた文章はそのまま表示されます。
$i のように書くと、$i の部分はその変数の値に置き換わります。
HTML; ← 見栄えが悪くても必ず行の先頭から記述すること！ 空白があると機能しません！


3 日時
 PHP で現在の日時を扱うには、date()関数を使います。
 $s = date(フォーマット文字列);
 フォーマット文字列はフォーマット文字を含む文字列で、よく使われるものとして次のようなものがあります。
文字:内容
Y:4 桁の年 例："2011"
y:2 桁の年 例："06"
n:月 "1" ～ "12"
m:2 桁の月 "01" ～ "12"
j:日付 "1" ～ "31"
d:2 桁の日付 "01" ～ "31"
w:曜日の数値表現 0(日曜日)～6(土曜日)
G:24 時間制の時間 "0" ～ "23"
H:2 桁の 24 時間制の時間 "00" ～ "23"
i:2 桁の分 "00" ～ "59"
s:2 桁の秒 "00" ～ "59"


4 アクセスカウンター

% chmod 666 counter.txt


<?php
 $f = fopen("counter.txt", "r+");
 $counter = rtrim(fgets($f));
 $counter++;
 rewind($f);
 fputs($f, $counter);
 fclose($f);
 echo 'あなたは '.$counter.'人目の訪問者です。';
?>

文字:内容
"r" 読み込み専用。ファイルポインタは先頭。
"r+" 読み書き両用。ファイルポインタは先頭。
"w" 書き込み専用。ファイルポインタは先頭。ファイルは新規作成します。
"w+" 読み書き両用。ファイルポインタは先頭。ファイルは新規作成します。
"a" 書き込み専用。ファイルポインタはファイルの終端に置き、追記します。
"a+" 読み書き両用。ファイルポインタはファイルの終端に置き、追記します。

5 アクセスログ

% chmod 666 log.txt

<?php
 $page = $_SERVER['SCRIPT_NAME'];
 $ip = $_SERVER['REMOTE_ADDR'];
 $host = gethostbyaddr($ip); // IP アドレスからホスト名に変換
 if( isset($_SERVER['HTTP_REFERER']) ) $ref = $_SERVER['HTTP_REFERER'];
 else $ref='';
 $browser = $_SERVER['HTTP_USER_AGENT'];
 $date = date("Y/m/d H:i:s");
 $f = fopen("log.txt","a");
 fwrite($f, "$date,$page,$ip,$host,$ref,$browser\n");
 fclose($f);
?>

$_SERVER という配列変数はオートグローバル変数と言われているもので、システムによって予め設定されています。その
値にアクセスログを取るために必要な情報が入っています。具体的なものを次の表に示します。

オートグローバル変数:内容
$_SERVER['SCRIPT_NAME']:Web ページの相対パス 例：/~アカウント/index.html
$_SERVER['REMOTE_ADDR']:訪問者の IP アドレス情報
$_SERVER['HTTP_REFERER']:リンク元の URL。アドレスバーに直接入力された場合とブックマ
ークから選択された場合には、空欄となります。
$_SERVER['HTTP_USER_AGENT']:訪問者のブラウザ情報

　外部公開していないはずの Web ページが外部に知られてしまうことがあります。それは、内部の Web ページから外部の Web
ページにリンクを張っている場合です。$_SERVER['HTTP_REFERER'] を参照すると、どこのリンクを辿って来たのかわかるよう
になっているのです。そのため、外部に社内専用掲示板の存在がわかってしまうということもあります。それを避けるにはクッ
ションページというものを利用します。
